{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8080/api\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth service\nexport const authService = {\n  login: credentials => api.post(\"/auth/login\", credentials),\n  register: userData => api.post(\"/auth/register\", userData)\n};\n\n// Event service\nexport const eventService = {\n  getAllEvents: () => api.get(\"/events\"),\n  getEventById: id => api.get(`/events/${id}`),\n  getEventsByCategory: category => api.get(`/events/category/${category}`),\n  getPopularEvents: () => api.get(\"/events/popular\")\n};\n\n// Booking service\nexport const bookingService = {\n  createBooking: bookingData => api.post(\"/bookings\", bookingData),\n  getUserBookings: () => api.get(\"/bookings/user\")\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authService","login","credentials","post","register","userData","eventService","getAllEvents","get","getEventById","id","getEventsByCategory","category","getPopularEvents","bookingService","createBooking","bookingData","getUserBookings"],"sources":["D:/assignment/v0-event-booking-platform-main/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_BASE_URL = \"http://localhost:8080/api\"\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\")\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\n// Auth service\nexport const authService = {\n  login: (credentials) => api.post(\"/auth/login\", credentials),\n  register: (userData) => api.post(\"/auth/register\", userData),\n}\n\n// Event service\nexport const eventService = {\n  getAllEvents: () => api.get(\"/events\"),\n  getEventById: (id) => api.get(`/events/${id}`),\n  getEventsByCategory: (category) => api.get(`/events/category/${category}`),\n  getPopularEvents: () => api.get(\"/events/popular\"),\n}\n\n// Booking service\nexport const bookingService = {\n  createBooking: (bookingData) => api.post(\"/bookings\", bookingData),\n  getUserBookings: () => api.get(\"/bookings/user\"),\n}\n\nexport default api\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAKd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAKjB,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAEE,QAAQ;AAC7D,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAEA,CAAA,KAAMnB,GAAG,CAACoB,GAAG,CAAC,SAAS,CAAC;EACtCC,YAAY,EAAGC,EAAE,IAAKtB,GAAG,CAACoB,GAAG,CAAC,WAAWE,EAAE,EAAE,CAAC;EAC9CC,mBAAmB,EAAGC,QAAQ,IAAKxB,GAAG,CAACoB,GAAG,CAAC,oBAAoBI,QAAQ,EAAE,CAAC;EAC1EC,gBAAgB,EAAEA,CAAA,KAAMzB,GAAG,CAACoB,GAAG,CAAC,iBAAiB;AACnD,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG;EAC5BC,aAAa,EAAGC,WAAW,IAAK5B,GAAG,CAACe,IAAI,CAAC,WAAW,EAAEa,WAAW,CAAC;EAClEC,eAAe,EAAEA,CAAA,KAAM7B,GAAG,CAACoB,GAAG,CAAC,gBAAgB;AACjD,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}