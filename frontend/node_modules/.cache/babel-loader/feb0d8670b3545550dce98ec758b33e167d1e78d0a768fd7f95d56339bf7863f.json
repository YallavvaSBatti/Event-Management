{"ast":null,"code":"import axios from\"axios\";const API_BASE_URL=\"http://localhost:8080/api\";// Create axios instance\nconst api=axios.create({baseURL:API_BASE_URL,headers:{\"Content-Type\":\"application/json\"}});// Add token to requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem(\"token\");if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Auth service\nexport const authService={login:credentials=>api.post(\"/auth/login\",credentials),register:userData=>api.post(\"/auth/register\",userData)};// Event service\nexport const eventService={getAllEvents:()=>api.get(\"/events\"),getEventById:id=>api.get(\"/events/\".concat(id)),getEventsByCategory:category=>api.get(\"/events/category/\".concat(category)),getPopularEvents:()=>api.get(\"/events/popular\"),searchEvents:query=>api.get(\"/events/search?q=\".concat(query))};// Booking service\nexport const bookingService={createBooking:bookingData=>api.post(\"/bookings\",bookingData),getUserBookings:()=>api.get(\"/bookings/user\")};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","authService","login","credentials","post","register","userData","eventService","getAllEvents","get","getEventById","id","getEventsByCategory","category","getPopularEvents","searchEvents","query","bookingService","createBooking","bookingData","getUserBookings"],"sources":["D:/assignment/v0-event-booking-platform-main/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_BASE_URL = \"http://localhost:8080/api\"\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem(\"token\")\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n})\n\n// Auth service\nexport const authService = {\n  login: (credentials) => api.post(\"/auth/login\", credentials),\n  register: (userData) => api.post(\"/auth/register\", userData),\n}\n\n// Event service\nexport const eventService = {\n  getAllEvents: () => api.get(\"/events\"),\n  getEventById: (id) => api.get(`/events/${id}`),\n  getEventsByCategory: (category) => api.get(`/events/category/${category}`),\n  getPopularEvents: () => api.get(\"/events/popular\"),\n  searchEvents: (query) => api.get(`/events/search?q=${query}`),\n\n}\n\n// Booking service\nexport const bookingService = {\n  createBooking: (bookingData) => api.post(\"/bookings\", bookingData),\n  getUserBookings: () => api.get(\"/bookings/user\"),\n}\n\nexport default api\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACvC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,WAAAC,MAAA,CAAaJ,KAAK,CAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAM,WAAW,CAAG,CACzBC,KAAK,CAAGC,WAAW,EAAKf,GAAG,CAACgB,IAAI,CAAC,aAAa,CAAED,WAAW,CAAC,CAC5DE,QAAQ,CAAGC,QAAQ,EAAKlB,GAAG,CAACgB,IAAI,CAAC,gBAAgB,CAAEE,QAAQ,CAC7D,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1BC,YAAY,CAAEA,CAAA,GAAMpB,GAAG,CAACqB,GAAG,CAAC,SAAS,CAAC,CACtCC,YAAY,CAAGC,EAAE,EAAKvB,GAAG,CAACqB,GAAG,YAAAT,MAAA,CAAYW,EAAE,CAAE,CAAC,CAC9CC,mBAAmB,CAAGC,QAAQ,EAAKzB,GAAG,CAACqB,GAAG,qBAAAT,MAAA,CAAqBa,QAAQ,CAAE,CAAC,CAC1EC,gBAAgB,CAAEA,CAAA,GAAM1B,GAAG,CAACqB,GAAG,CAAC,iBAAiB,CAAC,CAClDM,YAAY,CAAGC,KAAK,EAAK5B,GAAG,CAACqB,GAAG,qBAAAT,MAAA,CAAqBgB,KAAK,CAAE,CAE9D,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5BC,aAAa,CAAGC,WAAW,EAAK/B,GAAG,CAACgB,IAAI,CAAC,WAAW,CAAEe,WAAW,CAAC,CAClEC,eAAe,CAAEA,CAAA,GAAMhC,GAAG,CAACqB,GAAG,CAAC,gBAAgB,CACjD,CAAC,CAED,cAAe,CAAArB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}